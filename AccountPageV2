define("AccountPageV2", [], function() {
	return {
		entitySchemaName: "Account",
		details: /**SCHEMA_DETAILS*/{}/**SCHEMA_DETAILS*/,
		diff: /**SCHEMA_DIFF*/[
			{
				"operation": "insert",
				"name": "MainContactSectionButton",
				"values": {
					"itemType": 5,
					"caption": "OpenPrimaryContactButtonCaption",
					"click": {
						"bindTo": "onOpenPrimaryContactClick"
					},
					"layout": {
						"column": 1,
						"row": 6,
						"colSpan": 1
					}
				},
				"parentName": "ActionButtonsContainer",
				"propertyName": "items",
				"index": 3
			},
			{
				"operation": "merge",
				"name": "AccountName",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 0
					}
				}
			},
			{
				"operation": "merge",
				"name": "AccountType",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 1
					}
				}
			},
			{
				"operation": "merge",
				"name": "AccountOwner",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 2
					}
				}
			},
			{
				"operation": "merge",
				"name": "AccountWeb",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 3
					}
				}
			},
			{
				"operation": "merge",
				"name": "AccountPhone",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 4
					}
				}
			},
			{
				"operation": "merge",
				"name": "NewAccountCategory",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 5
					}
				}
			},
			{
				"operation": "merge",
				"name": "AccountIndustry",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 6
					}
				}
			},
			{
				"operation": "merge",
				"name": "AccountCompletenessContainer",
				"values": {
					"layout": {
						"colSpan": 24,
						"rowSpan": 1,
						"column": 0,
						"row": 7
					}
				}
			},
			{
				"operation": "merge",
				"name": "AlternativeName",
				"values": {
					"layout": {
						"colSpan": 12,
						"rowSpan": 1,
						"column": 0,
						"row": 0
					}
				}
			},
			{
				"operation": "merge",
				"name": "Code",
				"values": {
					"layout": {
						"colSpan": 12,
						"rowSpan": 1,
						"column": 12,
						"row": 0
					}
				}
			},
			{
				"operation": "merge",
				"name": "EmployeesNumber",
				"values": {
					"layout": {
						"colSpan": 12,
						"rowSpan": 1,
						"column": 0,
						"row": 0
					}
				}
			},
			{
				"operation": "merge",
				"name": "Ownership",
				"values": {
					"layout": {
						"colSpan": 12,
						"rowSpan": 1,
						"column": 12,
						"row": 0
					}
				}
			},
			{
				"operation": "merge",
				"name": "AnnualRevenue",
				"values": {
					"layout": {
						"colSpan": 12,
						"rowSpan": 1,
						"column": 0,
						"row": 1
					}
				}
			},
			{
				"operation": "insert",
				"name": "Usrminus3496542c-b45e-4c0e-ab87-6c645b712622",
				"values": {
					"layout": {
						"colSpan": 12,
						"rowSpan": 1,
						"column": 12,
						"row": 1,
						"layoutName": "CategoriesControlGroupContainer"
					},
					"enabled": false,
					"bindTo": "Usrminus"
				},
				"parentName": "CategoriesControlGroupContainer",
				"propertyName": "items",
				"index": 3
			}
		]/**SCHEMA_DIFF*/,
		methods: {
				// Метод-обработчик нажатия кнопки.
			onOpenPrimaryContactClick: function(scope, message, message2) {
						message = "";
						message2 = "";
						// Создаем экземпляр класса Terrasoft.EntitySchemaQuery с корневой схемой [Contact].
						var esq = Ext.create("Terrasoft.EntitySchemaQuery", {
							rootSchemaName: "Invoice"
						});
						// Добавляем колонку с названием контрагента, который относится к данному контакту.
						esq.addColumn("Account.Id", "AccountId");
						//esq.AddColumn("PaymentStatusId", "PaymentStatusId");
						esq.addColumn("Account.Name", "Name");
						// Добавляем колонку с именем основного контакта контрагента, который относится к данному контакту.
						esq.addColumn("PaymentAmount");
						esq.addColumn("Amount");
						// Получаем всю коллекцию записей и отображаем ее в информационном окне.
						esq.getEntityCollection(function(result) {
							if (!result.success) {
								// обработка/логирование ошибки, например
								this.showInformationDialog("Ошибка запроса данных");
								return;
							}
							result.collection.each(function(item) {
								message += " N: " + item.get("Name") +
							" - P: " + item.get("PaymentAmount") +
							" - A: " + item.get("Amount") + //"\n";
							" - I: " + item.get("AccountId") +  "\n";
							//" - S: " + item.get("PaymentStatusId") + "\n";
							});
							this.showInformationDialog(message);
						}, this);
					}
		},
		rules: {}
	};
});
